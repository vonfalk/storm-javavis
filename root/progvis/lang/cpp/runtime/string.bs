use progvis:lang:cpp;
use core:asm;

Int strlen(ConstPtr<Byte> src) {
	Nat total = 0;
	Nat offset = src.offset - sPtr.current * 2;
	Nat size = src.base.readSize * src.base.readCount;
	while (offset <= size) {
		if (src.base.readByte(offset) == 0)
			break;

		offset++;
		total++;
	}

	total.int;
}

Ptr<Byte> strcpy(ConstPtr<Byte> src) {
	Int len = strlen(src);

	Ptr<Byte> result = Ptr<Byte>:allocArray(len.nat + 1);
	Nat offset = src.offset - sPtr.current * 2;
	for (Int i = 0; i < len; i++) {
		result.base.writeByte(i.nat, src.base.readByte(offset + i.nat));
	}

	result;
}

Int strcmp(ConstPtr<Byte> a, ConstPtr<Byte> b) {
	Nat aOffset = a.offset - sPtr.current * 2;
	Nat bOffset = b.offset - sPtr.current * 2;
	Nat aSize = a.base.readSize * a.base.readCount;
	Nat bSize = b.base.readSize * b.base.readCount;

	while (aOffset < aSize & bOffset < bSize) {
		Byte aCh = a.base.readByte(aOffset);
		Byte bCh = b.base.readByte(bOffset);

		if (aCh != bCh) {
			if (aCh < bCh)
				return -1;
			else
				return 1;
		}

		if (aCh == 0)
			return 0;

		aOffset++;
		bOffset++;
	}

	0;
}
