use ui;
use graphics;
use core:geometry;

/**
 * Defaults for the visualizations.
 */

// Default font when drawing data.
Font dataFont on Ui = defaultFont();

// Font for captions.
Font captionFont on Ui = defaultFont();

// Font for code.
Font codeFont on Ui = Font("Liberation Mono", 12, 20);

// Background color when drawing data.
Brush dataBg on Ui = SolidBrush(white);

Brush dataReadBg on Ui = SolidBrush(Color(0.7, 1, 0.7));
Brush dataWriteBg on Ui = SolidBrush(Color(1, 0.7, 0.7));
Brush dataError on Ui = SolidBrush(red);

// Text color when drawing text.
Brush dataFg on Ui = SolidBrush(black);

// Text color when highlighting errors.
Brush errorFg on Ui = SolidBrush(red);

// Regular link.
Brush activeLink on Ui = SolidBrush(black);
Brush inactiveLink on Ui = SolidBrush(Color(0, 0, 0, 0.4));

// Background color when drawing captions.
Brush captionBg on Ui = SolidBrush(white * 0.8);
Brush captionActiveBg on Ui = SolidBrush(white * 0.6 + blue);

// Text color when drawing captions.
Brush captionFg on Ui = SolidBrush(black);

// Inner margin for data elements.
Size dataMargin on Ui = Size(4, 2);

// Border for data elements.
Size dataBorder on Ui = Size(4, 4);

// Border for composite data elements.
Size compositeBorder on Ui = Size(4, 4);

// Offset for each stack frame.
Float stackOffset on Ui = 4;

// Minimum width for a thread.
Float threadMinWidth on Ui = 300;

// Default code view size.
Size sourceSize on Ui = Size(350, 200);

// Highlight color for source code.
Brush sourceHighlight on Ui = SolidBrush(yellow);
Brush sourceSleepingHighlight on Ui = SolidBrush(Color(0.8, 0.8, 1));
Brush sourceTerminatedHighlight on Ui = SolidBrush(Color(1, 0.8, 0.8));
Brush sourceReturnedHighlight on Ui = SolidBrush(Color(0.8, 1, 0.8));

// Button size in the thread controls.
Size buttonSize on Ui = Size(30, 30);

// Marked color of a button.
Brush buttonBg on Ui = SolidBrush(white);
Brush buttonMarked on Ui = SolidBrush(white * 0.8 + blue);

// Layout spacing of objects.
Size layoutSpace on Ui = Size(35, 20);
