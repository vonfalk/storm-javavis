use core:net;
use core:io;

// Tell the server that we're starting!
void postUsage() {
	Nat id = findId();

	if (stream = connect("fprg.se", 80)) {
		try {
			postUsage(stream, id);
		} catch (Exception e) {
			print("Error: ${e}");
		}
		stream.close();
	}
}

Nat findId() {
	if (root = core:lang:rootPkg().url) {
		var dir = root / "id";
		if (!dir.exists)
			dir.createDir();

		var file = dir / "id";
		if (!file.exists) {
			Nat id = rand(0n, 0xFFFFFFFF);
			var stream = file.write();
			id.write(stream);
			stream.close();
			return id;
		} else {
			var stream = file.read();
			Nat id = Nat:read(stream);
			stream.close();
			return id;
		}
	}

	// Unable to find/create a suitable ID-file.
	0;
}

void postUsage(NetStream stream, Nat id) {
	TextInfo info;
	info.useCrLf = true;
	info.useBom = false;
	Utf8Output out(stream.output, info);

	out.writeLine("GET /progvis/log.php?id=${id} HTTP/1.1");
	out.writeLine("Host: www.fprg.se");
	out.writeLine("");
	out.flush();

	// Read the response so that we don't close the socket too early.
	Utf8Input in(stream.input);
	Str line = in.readLine;

	if (!line.endsWith("HTTP/1.1 200 OK"))
		print("Error, got ${line}");
}
